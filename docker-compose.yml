version: "3.4"
services:
  backend:
    container_name: mug_backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./backend/mug/.env
      - ./backend/mug/db.env
    expose:
      - 8080
    command: gunicorn mug.wsgi:application --bind 0.0.0.0:8080 --log-level debug
    volumes:
      - mug_static:/app/static
      - mug_media:/app/media
    depends_on:
      - postgres
    networks:
      - internal
  postgres:
    image: postgres:alpine
    container_name: mug_postgres
    volumes:
      - mug_postgres_data:/var/lib/postgresql/data
    env_file:
      - ./backend/mug/db.env
    networks:
      - internal
  nginx:
    image: nginx:alpine
    container_name: mug_nginx
    expose:
      - 81
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/dist:/dist
      - mug_static:/static
      - mug_media:/media
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mug.middlewares=no-www-http@file,to-https@file"
      - "traefik.http.routers.mug.rule=Host(`mug.micheleawada.com`) || Host(`www.mug.micheleawada.com`) || Host(`backend.mug.micheleawada.com`)"
      - "traefik.http.routers.mug.entrypoints=web"
      - "traefik.http.routers.mug-secure.rule=Host(`mug.micheleawada.com`) || Host(`www.mug.micheleawada.com`) || Host(`backend.mug.micheleawada.com`)"
      - "traefik.http.routers.mug-secure.middlewares=no-www@file"
      - "traefik.http.routers.mug-secure.tls.certresolver=letsencrypt"
      - "traefik.http.routers.mug-secure.tls=true"
      - "traefik.http.routers.mug-secure.entrypoints=web-secure"
    networks:
      - internal
      - traefikproxy

volumes:
  mug_postgres_data:
  mug_media:
  mug_static:
  mug_frontend_static:

networks:
  internal:
  traefikproxy:
    name: traefikproxy
    external: true
